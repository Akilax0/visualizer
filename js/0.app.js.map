{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/helpers/vertexNormalsHelper.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/loaders/GLTFLoader.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","isDev","isShowingStats","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","model","selected","initialTypes","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","threeRenderer","antialias","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","Config","capabilities","getMaxAnisotropy","updateSize","setSize","offsetWidth","offsetHeight","render","Camera","renderer","height","threeCamera","Light","init","visible","castShadow","mapSize","directionalLightHelper","lightName","Controls","orbitControls","threeControls","rS","bS","glS","tS","Stats","start","tick","frame","end","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","_v1","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","geometry","isGeometry","faces","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","toneMapped","matrixAutoUpdate","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","applyMatrix4","applyMatrix3","normalize","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","opacity","transparent","edges","edgesLine","vertexHelper","boxHelper","remove","Helpers","fn","threshhold","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","log","round","error","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","rotation","repeat","texCoord","source","copySampleValue_","index","result","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","Matrix4","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","onKeyChange","onBlur","prop","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseLeave","onMouseOver","eventMatches","MQTTClient","robot","client_id","random","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","topic","destinationName","heading","entries","entry","r","exists","move","changeColor","R","G","B","ambient","message","callback","payload","Message","send","STLLoader","require","Robot","getObjectByName","setRGB","receiveShadow","DEG2RAD","newHeading","Tween","to","onUpdate","onComplete","delay","Main","clock","place","stats","setUp","ground","grid","item","alert","meshHelper","obj","enable","querySelector","display","requestAnimationFrame","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["module.exports = function (THREE) {\n    var MOUSE = THREE.MOUSE;\n    if (!MOUSE) MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    /*global THREE, console */\n\n    function OrbitConstraint(object) {\n        this.object = object;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        // and where it pans with respect to.\n        this.target = new THREE.Vector3();\n\n        // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // Limits to how far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var EPS = 0.000001;\n\n        // Current position in spherical coordinate system.\n        var theta;\n        var phi;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // API\n\n        this.getPolarAngle = function () {\n            return phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n\n        this.rotateLeft = function (angle) {\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n            phiDelta -= angle;\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = (function () {\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in distance in world space to move up\n        this.panUp = (function () {\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                scope.panLeft((2 * deltaX * targetDistance) / screenHeight);\n                scope.panUp((2 * deltaY * targetDistance) / screenHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                // orthographic\n                scope.panLeft(\n                    (deltaX * (scope.object.right - scope.object.left)) / screenWidth\n                );\n                scope.panUp(\n                    (deltaY * (scope.object.top - scope.object.bottom)) / screenHeight\n                );\n            } else {\n                // camera neither orthographic or perspective\n                console.warn(\n                    'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.'\n                );\n            }\n        };\n\n        this.dollyIn = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    this.minZoom,\n                    Math.min(this.maxZoom, this.object.zoom * dollyScale)\n                );\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn(\n                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n                );\n            }\n        };\n\n        this.dollyOut = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    this.minZoom,\n                    Math.min(this.maxZoom, this.object.zoom / dollyScale)\n                );\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn(\n                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n                );\n            }\n        };\n\n        this.update = (function () {\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(\n                object.up,\n                new THREE.Vector3(0, 1, 0)\n            );\n            var quatInverse = quat.clone().inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n                var position = this.object.position;\n\n                offset.copy(position).sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n\n                theta = Math.atan2(offset.x, offset.z);\n\n                // angle from y-axis\n\n                phi = Math.atan2(\n                    Math.sqrt(offset.x * offset.x + offset.z * offset.z),\n                    offset.y\n                );\n\n                theta += thetaDelta;\n                phi += phiDelta;\n\n                // restrict theta to be between desired limits\n                theta = Math.max(\n                    this.minAzimuthAngle,\n                    Math.min(this.maxAzimuthAngle, theta)\n                );\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this.target.add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(this.target).add(offset);\n\n                this.object.lookAt(this.target);\n\n                if (this.enableDamping === true) {\n                    thetaDelta *= 1 - this.dampingFactor;\n                    phiDelta *= 1 - this.dampingFactor;\n                } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(this.object.position) > EPS ||\n                    8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n    }\n\n    // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n    // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n    // supported.\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n    function OrbitControls(object, domElement) {\n        var constraint = new OrbitConstraint(object);\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // API\n\n        Object.defineProperty(this, 'constraint', {\n            get: function () {\n                return constraint;\n            }\n        });\n\n        this.getPolarAngle = function () {\n            return constraint.getPolarAngle();\n        };\n\n        this.getAzimuthalAngle = function () {\n            return constraint.getAzimuthalAngle();\n        };\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // center is old, deprecated; use \"target\" instead\n        this.center = this.target;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        // for reset\n\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // events\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        function pan(deltaX, deltaY) {\n            var element =\n                scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n        }\n\n        this.update = function () {\n            if (this.autoRotate && state === STATE.NONE) {\n                constraint.rotateLeft(getAutoRotationAngle());\n            }\n\n            if (constraint.update() === true) {\n                this.dispatchEvent(changeEvent);\n            }\n        };\n\n        this.reset = function () {\n            state = STATE.NONE;\n\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n\n            this.update();\n        };\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.enableRotate === false) return;\n\n                state = STATE.ROTATE;\n\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.enableZoom === false) return;\n\n                state = STATE.DOLLY;\n\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.enablePan === false) return;\n\n                state = STATE.PAN;\n\n                panStart.set(event.clientX, event.clientY);\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            var element =\n                scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (state === STATE.ROTATE) {\n                if (scope.enableRotate === false) return;\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                constraint.rotateLeft(\n                    ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n                        scope.rotateSpeed\n                );\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                constraint.rotateUp(\n                    ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n                        scope.rotateSpeed\n                );\n\n                rotateStart.copy(rotateEnd);\n            } else if (state === STATE.DOLLY) {\n                if (scope.enableZoom === false) return;\n\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    constraint.dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n                    constraint.dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.enablePan === false) return;\n\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n            }\n\n            if (state !== STATE.NONE) scope.update();\n        }\n\n        function onMouseUp(/* event */) {\n            if (scope.enabled === false) return;\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n            if (\n                scope.enabled === false ||\n                scope.enableZoom === false ||\n                state !== STATE.NONE\n            )\n                return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var delta = 0;\n\n            if (event.wheelDelta !== undefined) {\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                // Firefox\n\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                constraint.dollyOut(getZoomScale());\n            } else if (delta < 0) {\n                constraint.dollyIn(getZoomScale());\n            }\n\n            scope.update();\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (\n                scope.enabled === false ||\n                scope.enableKeys === false ||\n                scope.enablePan === false\n            )\n                return;\n\n            switch (event.keyCode) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n            }\n        }\n\n        function touchstart(event) {\n            if (scope.enabled === false) return;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    dollyStart.set(0, distance);\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n\n                    state = STATE.TOUCH_PAN;\n\n                    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n        }\n\n        function touchmove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var element =\n                scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n                    if (state !== STATE.TOUCH_ROTATE) return;\n\n                    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                    // rotating across whole screen goes 360 degrees around\n                    constraint.rotateLeft(\n                        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n                            scope.rotateSpeed\n                    );\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    constraint.rotateUp(\n                        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n                            scope.rotateSpeed\n                    );\n\n                    rotateStart.copy(rotateEnd);\n\n                    scope.update();\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n                    if (state !== STATE.TOUCH_DOLLY) return;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n\n                    dollyEnd.set(0, distance);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                    if (dollyDelta.y > 0) {\n                        constraint.dollyOut(getZoomScale());\n                    } else if (dollyDelta.y < 0) {\n                        constraint.dollyIn(getZoomScale());\n                    }\n\n                    dollyStart.copy(dollyEnd);\n\n                    scope.update();\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n                    if (state !== STATE.TOUCH_PAN) return;\n\n                    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    panDelta.subVectors(panEnd, panStart);\n\n                    pan(panDelta.x, panDelta.y);\n\n                    panStart.copy(panEnd);\n\n                    scope.update();\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function touchend(/* event */) {\n            if (scope.enabled === false) return;\n\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n\n        this.dispose = function () {\n            this.domElement.removeEventListener('contextmenu', contextmenu, false);\n            this.domElement.removeEventListener('mousedown', onMouseDown, false);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n            this.domElement.removeEventListener(\n                'MozMousePixelScroll',\n                onMouseWheel,\n                false\n            ); // firefox\n\n            this.domElement.removeEventListener('touchstart', touchstart, false);\n            this.domElement.removeEventListener('touchend', touchend, false);\n            this.domElement.removeEventListener('touchmove', touchmove, false);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            window.removeEventListener('keydown', onKeyDown, false);\n        };\n\n        this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n        this.domElement.addEventListener('mousedown', onMouseDown, false);\n        this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n        this.domElement.addEventListener('touchstart', touchstart, false);\n        this.domElement.addEventListener('touchend', touchend, false);\n        this.domElement.addEventListener('touchmove', touchmove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n        this.update();\n    }\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n        object: {\n            get: function () {\n                return this.constraint.object;\n            }\n        },\n\n        target: {\n            get: function () {\n                return this.constraint.target;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: target is now immutable. Use target.set() instead.'\n                );\n                this.constraint.target.copy(value);\n            }\n        },\n\n        minDistance: {\n            get: function () {\n                return this.constraint.minDistance;\n            },\n\n            set: function (value) {\n                this.constraint.minDistance = value;\n            }\n        },\n\n        maxDistance: {\n            get: function () {\n                return this.constraint.maxDistance;\n            },\n\n            set: function (value) {\n                this.constraint.maxDistance = value;\n            }\n        },\n\n        minZoom: {\n            get: function () {\n                return this.constraint.minZoom;\n            },\n\n            set: function (value) {\n                this.constraint.minZoom = value;\n            }\n        },\n\n        maxZoom: {\n            get: function () {\n                return this.constraint.maxZoom;\n            },\n\n            set: function (value) {\n                this.constraint.maxZoom = value;\n            }\n        },\n\n        minPolarAngle: {\n            get: function () {\n                return this.constraint.minPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minPolarAngle = value;\n            }\n        },\n\n        maxPolarAngle: {\n            get: function () {\n                return this.constraint.maxPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxPolarAngle = value;\n            }\n        },\n\n        minAzimuthAngle: {\n            get: function () {\n                return this.constraint.minAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minAzimuthAngle = value;\n            }\n        },\n\n        maxAzimuthAngle: {\n            get: function () {\n                return this.constraint.maxAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxAzimuthAngle = value;\n            }\n        },\n\n        enableDamping: {\n            get: function () {\n                return this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                this.constraint.enableDamping = value;\n            }\n        },\n\n        dampingFactor: {\n            get: function () {\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                this.constraint.dampingFactor = value;\n            }\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n                );\n                return !this.enableZoom;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n                );\n                this.enableZoom = !value;\n            }\n        },\n\n        noRotate: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n                );\n                return !this.enableRotate;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n                );\n                this.enableRotate = !value;\n            }\n        },\n\n        noPan: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n                );\n                return !this.enablePan;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n                );\n                this.enablePan = !value;\n            }\n        },\n\n        noKeys: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n                );\n                return !this.enableKeys;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n                );\n                this.enableKeys = !value;\n            }\n        },\n\n        staticMoving: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n                );\n                return !this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n                );\n                this.constraint.enableDamping = !value;\n            }\n        },\n\n        dynamicDampingFactor: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.constraint.dampingFactor = value;\n            }\n        }\n    });\n\n    return OrbitControls;\n};\n","import TWEEN from '@tweenjs/tween.js';\n\n// This object contains the state of the app\nexport default {\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15'\n    },\n    isDev: true,\n    isShowingStats: false,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    model: {\n        selected: 0,\n        initialTypes: ['gltf'],\n        type: 'gltf'\n    },\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 100,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(\n            this.container.offsetWidth,\n            this.container.offsetHeight\n        );\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(\n            Config.camera.posX,\n            Config.camera.posY,\n            Config.camera.posZ\n        );\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(\n            Config.pointLight.x,\n            Config.pointLight.y,\n            Config.pointLight.z\n        );\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(\n            this.directionalLight.shadow.camera\n        );\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(\n            Config.hemiLight.x,\n            Config.hemiLight.y,\n            Config.hemiLight.z\n        );\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport OrbitControls from '../../utils/orbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        // Orbit controls first needs to pass in THREE to constructor\n        const orbitControls = new OrbitControls(THREE);\n        this.threeControls = new orbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(\n            Config.controls.target.x,\n            Config.controls.target.y,\n            Config.controls.target.z\n        );\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n        this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n\n    setUp() {\n        bS = new BrowserStats();\n        glS = new glStats();\n        tS = new threeStats(this.renderer.threeRenderer);\n\n        rS = new rStats({\n            CSSPath: './css/',\n            userTimingAPI: true,\n            values: {\n                frame: {\n                    caption: 'Total frame time (ms)',\n                    over: 16,\n                    average: true,\n                    avgMs: 100\n                },\n                fps: { caption: 'Framerate (FPS)', below: 30 },\n                calls: { caption: 'Calls (three.js)', over: 3000 },\n                raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n                rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n                texture: { caption: 'GenTex', average: true, avgMs: 100 }\n            },\n            groups: [\n                { caption: 'Framerate', values: ['fps', 'raf'] },\n                {\n                    caption: 'Frame Budget',\n                    values: ['frame', 'texture', 'setup', 'render']\n                }\n            ],\n            fractions: [{ base: 'frame', steps: ['texture', 'setup', 'render'] }],\n            plugins: [bS, tS]\n        });\n    }\n\n    static start() {\n        rS('frame').start();\n        glS.start();\n\n        rS('rAF').tick();\n        rS('FPS').frame();\n\n        rS('render').start();\n    }\n\n    static end() {\n        rS('render').end(); // render finished\n        rS('frame').end(); // frame finished\n\n        // Local rStats update\n        rS('rStats').start();\n        rS().update();\n        rS('rStats').end();\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport {\n    BufferGeometry,\n    Float32BufferAttribute,\n    LineSegments,\n    LineBasicMaterial,\n    Matrix3,\n    Vector3\n} from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(\n        this,\n        geometry,\n        new LineBasicMaterial({ color: color, toneMapped: false })\n    );\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal)\n                    .applyMatrix3(_normalMatrix)\n                    .normalize()\n                    .multiplyScalar(this.size)\n                    .add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(\n                matrixWorld\n            );\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix)\n                .normalize()\n                .multiplyScalar(this.size)\n                .add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture)\n                                resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) =>\n                            reject(\n                                new Error(\n                                    xhr +\n                                        'An error occurred loading while loading ' +\n                                        imageFile.image\n                                )\n                            )\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] =\n                        textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(\n                            data\n                        );\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(\n                        new Error(\n                            'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'\n                        )\n                    );\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[\n                                extensionName\n                            ] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[\n                                extensionName\n                            ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[\n                                extensionName\n                            ] = new GLTFDracoMeshCompressionExtension(\n                                json,\n                                this.dracoLoader\n                            );\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(\n                                this.ddsLoader\n                            );\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[\n                                extensionName\n                            ] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[\n                                extensionName\n                            ] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn(\n                                    'THREE.GLTFLoader: Unknown extension \"' +\n                                        extensionName +\n                                        '\".'\n                                );\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error(\n                'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader'\n            );\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension =\n            (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined\n                        ? lightDef.spot.innerConeAngle\n                        : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined\n                        ? lightDef.spot.outerConeAngle\n                        : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra =\n                    1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error(\n                    'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".'\n                );\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (\n        materialParams,\n        materialDef,\n        parser\n    ) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(\n                        materialParams,\n                        'map',\n                        metallicRoughness.baseColorTexture\n                    )\n                );\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (\n        materialParams,\n        materialDef,\n        parser\n    ) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'clearcoatMap',\n                    extension.clearcoatTexture\n                )\n            );\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'clearcoatRoughnessMap',\n                    extension.clearcoatRoughnessTexture\n                )\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'clearcoatNormalMap',\n                    extension.clearcoatNormalTexture\n                )\n            );\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(\n                    data,\n                    BINARY_EXTENSION_HEADER_LENGTH + chunkIndex,\n                    chunkLength\n                );\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (\n        primitive,\n        parser\n    ) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName =\n                ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName =\n                ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] =\n                    accessorDef.normalized === true;\n            }\n        }\n\n        return parser\n            .getDependency('bufferView', bufferViewIndex)\n            .then(function (bufferView) {\n                return new Promise(function (resolve) {\n                    dracoLoader.decodeDracoFile(\n                        bufferView,\n                        function (geometry) {\n                            for (var attributeName in geometry.attributes) {\n                                var attribute = geometry.attributes[attributeName];\n                                var normalized = attributeNormalizedMap[attributeName];\n\n                                if (normalized !== undefined)\n                                    attribute.normalized = normalized;\n                            }\n\n                            resolve(geometry);\n                        },\n                        threeAttributeMap,\n                        attributeTypeMap\n                    );\n                });\n            });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (\n        texture,\n        transform\n    ) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn(\n                'THREE.GLTFLoader: Custom UV sets in \"' +\n                    this.name +\n                    '\" extension not yet supported.'\n            );\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = [\n            '#ifdef USE_SPECULARMAP',\n            '\tuniform sampler2D specularMap;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float roughness;',\n                'uniform vec3 specular;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(\n                        parser.assignTexture(\n                            materialParams,\n                            'map',\n                            pbrSpecularGlossiness.diffuseTexture\n                        )\n                    );\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined\n                        ? pbrSpecularGlossiness.glossinessFactor\n                        : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(\n                        pbrSpecularGlossiness.specularFactor\n                    );\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(\n                        parser.assignTexture(\n                            materialParams,\n                            'glossinessMap',\n                            specGlossMapDef\n                        )\n                    );\n                    pending.push(\n                        parser.assignTexture(\n                            materialParams,\n                            'specularMap',\n                            specGlossMapDef\n                        )\n                    );\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map =\n                    materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap =\n                    materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap =\n                    materialParams.emissiveMap === undefined\n                        ? null\n                        : materialParams.emissiveMap;\n\n                material.bumpMap =\n                    materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap =\n                    materialParams.normalMap === undefined\n                        ? null\n                        : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale)\n                    material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap =\n                    materialParams.specularMap === undefined\n                        ? null\n                        : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined\n                        ? null\n                        : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap =\n                    materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(\n        parameterPositions,\n        sampleValues,\n        sampleSize,\n        resultBuffer\n    ) {\n        Interpolant.call(\n            this,\n            parameterPositions,\n            sampleValues,\n            sampleSize,\n            resultBuffer\n        );\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ =\n        GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ =\n        GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn(\n                    'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras\n                );\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([\n            Promise.all(pendingPositionAccessors),\n            Promise.all(pendingNormalAccessors)\n        ]).then(function (accessors) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn(\n                    'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.'\n                );\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension =\n            primitiveDef.extensions &&\n            primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices +\n                ':' +\n                createAttributesKey(primitiveDef.attributes) +\n                ':' +\n                primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([\n            this.getDependencies('scene'),\n            this.getDependencies('animation'),\n            this.getDependencies('camera')\n        ])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (\n            var skinIndex = 0, skinLength = skinDefs.length;\n            skinIndex < skinLength;\n            skinIndex++\n        ) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (\n            var nodeIndex = 0, nodeLength = nodeDefs.length;\n            nodeIndex < nodeLength;\n            nodeIndex++\n        ) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[\n                        EXTENSIONS.KHR_LIGHTS_PUNCTUAL\n                    ].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error(\n                'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.'\n            );\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(\n                resolveURL(bufferDef.uri, options.path),\n                resolve,\n                undefined,\n                function () {\n                    reject(\n                        new Error(\n                            'THREE.GLTFLoader: Failed to load buffer \"' +\n                                bufferDef.uri +\n                                '\".'\n                        )\n                    );\n                }\n            );\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(\n                this.getDependency('bufferView', accessorDef.bufferView)\n            );\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(\n                this.getDependency('bufferView', accessorDef.sparse.indices.bufferView)\n            );\n            pendingBufferViews.push(\n                this.getDependency('bufferView', accessorDef.sparse.values.bufferView)\n            );\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined\n                    ? json.bufferViews[accessorDef.bufferView].byteStride\n                    : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(\n                        bufferView,\n                        byteOffset,\n                        accessorDef.count * itemSize\n                    );\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices =\n                    WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2)\n                        bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3)\n                        bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4)\n                        bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error(\n                            'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.'\n                        );\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser\n                .getDependency('bufferView', source.bufferView)\n                .then(function (bufferView) {\n                    isObjectURL = true;\n                    var blob = new Blob([bufferView], { type: source.mimeType });\n                    sourceURI = URL.createObjectURL(blob);\n                    return sourceURI;\n                });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(\n                        resolveURL(sourceURI, options.path),\n                        resolve,\n                        undefined,\n                        reject\n                    );\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter =\n                    WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined\n                        ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]\n                        : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[\n                        EXTENSIONS.KHR_TEXTURE_TRANSFORM\n                    ].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals =\n            useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (\n            useVertexTangents ||\n            useVertexColors ||\n            useFlatShading ||\n            useSkinning ||\n            useMorphTargets\n        ) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial)\n                cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (\n            material.aoMap &&\n            geometry.attributes.uv2 === undefined &&\n            geometry.attributes.uv !== undefined\n        ) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension =\n                extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(\n                        materialParams,\n                        'map',\n                        metallicRoughness.baseColorTexture\n                    )\n                );\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined\n                    ? metallicRoughness.metallicFactor\n                    : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined\n                    ? metallicRoughness.roughnessFactor\n                    : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(\n                        materialParams,\n                        'metalnessMap',\n                        metallicRoughness.metallicRoughnessTexture\n                    )\n                );\n                pending.push(\n                    parser.assignTexture(\n                        materialParams,\n                        'roughnessMap',\n                        metallicRoughness.metallicRoughnessTexture\n                    )\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest =\n                    materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (\n            materialDef.normalTexture !== undefined &&\n            materialType !== MeshBasicMaterial\n        ) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'normalMap',\n                    materialDef.normalTexture\n                )\n            );\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(\n                    materialDef.normalTexture.scale,\n                    materialDef.normalTexture.scale\n                );\n            }\n        }\n\n        if (\n            materialDef.occlusionTexture !== undefined &&\n            materialType !== MeshBasicMaterial\n        ) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'aoMap',\n                    materialDef.occlusionTexture\n                )\n            );\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (\n            materialDef.emissiveFactor !== undefined &&\n            materialType !== MeshBasicMaterial\n        ) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (\n            materialDef.emissiveTexture !== undefined &&\n            materialType !== MeshBasicMaterial\n        ) {\n            pending.push(\n                parser.assignTexture(\n                    materialParams,\n                    'emissiveMap',\n                    materialDef.emissiveTexture\n                )\n            );\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(\n                clearcoatExtension.extendParams(\n                    materialParams,\n                    { extensions: materialExtensions },\n                    parser\n                )\n            );\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[\n                    EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS\n                ].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions)\n                addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(\n                    new Vector3(min[0], min[1], min[2]),\n                    new Vector3(max[0], max[1], max[2])\n                );\n            } else {\n                console.warn(\n                    'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.'\n                );\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn(\n                            'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.'\n                        );\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser\n                .getDependency('accessor', accessorIndex)\n                .then(function (accessor) {\n                    geometry.setAttribute(attributeName, accessor);\n                });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName =\n                ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(\n                assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName)\n            );\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser\n                .getDependency('accessor', primitiveDef.indices)\n                .then(function (accessor) {\n                    geometry.setIndex(accessor);\n                });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error(\n                'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.'\n            );\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (\n                    primitive.extensions &&\n                    primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                ) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(\n                        new BufferGeometry(),\n                        primitive,\n                        parser\n                    );\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (\n                        mesh.isSkinnedMesh === true &&\n                        !mesh.geometry.attributes.skinWeight.normalized\n                    ) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(\n                            mesh.geometry,\n                            TriangleStripDrawMode\n                        );\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(\n                            mesh.geometry,\n                            TriangleFanDrawMode\n                        );\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error(\n                        'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode\n                    );\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (\n            accessor\n        ) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input =\n                animationDef.parameters !== undefined\n                    ? animationDef.parameters[sampler.input]\n                    : sampler.input;\n            var output =\n                animationDef.parameters !== undefined\n                    ? animationDef.parameters[sampler.output]\n                    : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined\n                        ? INTERPOLATION[sampler.interpolation]\n                        : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error(\n                            'THREE.GLTFLoader: Unsupported output accessor component type.'\n                        );\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(\n                            result\n                        ) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name\n                ? animationDef.name\n                : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (\n                                    var i = 0, il = nodeDef.weights.length;\n                                    i < il;\n                                    i++\n                                ) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(\n                    parser.getDependency(\n                        'light',\n                        nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light\n                    )\n                );\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions)\n                addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(\n                                    parser.getDependency('node', skinEntry.joints[i])\n                                );\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(\n                                                skinEntry.inverseBindMatrices.array,\n                                                j * 16\n                                            );\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(\n                                    new Skeleton(bones, boneInverses),\n                                    mesh.matrixWorld\n                                );\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions)\n                addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener(\n            'keydown',\n            (event) => this.onKeyChange(event),\n            false\n        );\n        this.domElement.addEventListener(\n            'keyup',\n            (event) => this.onKeyChange(event),\n            false\n        );\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener(\n            'keydown',\n            (event) => this.onKeyChange(event),\n            false\n        );\n        this.domElement.removeEventListener(\n            'keyup',\n            (event) => this.onKeyChange(event),\n            false\n        );\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener(\n            'mouseleave',\n            (event) => this.onMouseLeave(event),\n            false\n        );\n        this.renderer.domElement.addEventListener(\n            'mouseover',\n            (event) => this.onMouseOver(event),\n            false\n        );\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport MQTT from 'paho-mqtt';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n// -----------------------------------------------------------------------------\n// This will provide location data to the GUI\nconst TOPIC_INFO = 'v1/localization/info';\n\n// Create and delete robot objects\nconst TOPIC_CREATE = 'v1/robot/create';\nconst TOPIC_DELETE = 'v1/robot/delete';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'v1/localization/?';\n\n// TODO: need to map with the server\nconst TOPIC_CHANGE_COLOR = 'v1/sensor/color';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene, robot) {\n        this.scene = scene;\n        this.robot = robot;\n\n        const client_id = 'client_' + Math.random().toString(36).substring(2, 15); // create a random client Id\n        this.client = new MQTT.Client(\n            Config.mqtt.server,\n            Config.mqtt.port,\n            Config.mqtt.path,\n            client_id\n        );\n\n        window.mqtt = this.client;\n\n        this.client.connect({\n            userName: Config.mqtt.user,\n            password: Config.mqtt.password,\n            reconnect: true,\n            useSSL: true,\n            cleanSession: false,\n            onSuccess: () => {\n                console.log('MQTT: connected');\n\n                // Subscribe to topics\n                this.client.subscribe(TOPIC_INFO);\n                this.client.subscribe(TOPIC_CREATE);\n                this.client.subscribe(TOPIC_DELETE);\n                this.client.subscribe(TOPIC_CHANGE_COLOR);\n\n                window.robot = this.robot;\n                this.client.onMessageArrived = this.onMessageArrived;\n                this.client.onConnectionLost = this.onConnectionLost;\n            },\n            onFailure: () => {\n                console.log('MQTT: connection failed');\n            }\n        });\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const topic = packet.destinationName;\n\n        if (topic == TOPIC_CREATE) {\n            //console.log('MQTT: ' + topic + ' > ' + msg);\n            try {\n                var data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_INFO) {\n            //console.log('MQTT: ' + topic + ' > ' + msg);\n            try {\n                var data = JSON.parse(msg);\n\n                Object.entries(data).forEach((entry) => {\n                    // Update each robot\n                    const r = entry[1];\n\n                    if (window.robot.exists(r.id) == undefined) {\n                        window.robot.create(r.id, r.x, r.y, r.heading);\n                    } else {\n                        window.robot.move(r.id, r.x, r.y, r.heading);\n                    }\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        payload.destinationName = topic;\n        this.client.send(payload);\n        console.log('MQTT: published');\n\n        if (callback != null) callback();\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName('id_' + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else {\n            if (callback != null) callback('undefined');\n        }\n\n        return r;\n    }\n\n    create(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName('id_' + id);\n        if (r == undefined) {\n            // Create only if not exists\n\n            // Limit the arena that robot can go\n            x = Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n            y = Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n            var loader = new STLLoader();\n            loader.load('./assets/models/model.stl', function (geometry, scene) {\n                var material = new THREE.MeshStandardMaterial({ color: 0x5877d2 });\n\n                var r = new THREE.Mesh(geometry, material);\n                r.receiveShadow = true;\n                r.name = 'id_' + id;\n                r.position.set(x, y, 0);\n                r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                window.scene.add(r);\n\n                console.log('Created> id:', id, ' | x:', x, 'y:', y, 'heading:', heading);\n\n                // Callback function\n                if (callback != undefined) callback('success');\n            });\n        } else {\n            if (callback != undefined) callback('already defined');\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName('id_' + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else {\n                if (callback != undefined) callback('not found');\n            }\n        } else {\n            if (callback != undefined) callback('id not specified');\n        }\n    }\n\n    exists(id) {\n        var r = this.scene.getObjectByName('id_' + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName('id_' + id);\n        if (r != undefined) {\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // Limit the arena that robot can go\n            x = Math.min(\n                Math.max(Math.round(x * 10) / 10, Config.arena.minX),\n                Config.arena.maxX\n            );\n            y = Math.min(\n                Math.max(Math.round(y * 10) / 10, Config.arena.minY),\n                Config.arena.maxY\n            );\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(\n                Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2)\n            );\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n                        r.rotation.y = position.heading;\n                    })\n                    .onComplete(() => {\n                        //console.log('Move> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        } else {\n            if (callback != null) callback('undefined');\n        }\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName('id_' + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        } else {\n            return null;\n        }\n    }\n\n    update() {\n        TWEEN.update();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\n\n// Helpers\nimport Stats from './helpers/stats';\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Implemented by Nuwan\nimport MQTTClient from './managers/mqttClient';\nimport Robot from './components/robot';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nvar STLLoader = require('three-stl-loader')(THREE);\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        // Defined by Nuwan\n        this.robot = new Robot(this.scene);\n        this.mqtt = new MQTTClient(this.scene, this.robot);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        this.camera = new Camera(this.renderer.threeRenderer);\n        this.controls = new Controls(this.camera.threeCamera, container);\n        this.light = new Light(this.scene);\n\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up rStats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats(this.renderer);\n            this.stats.setUp();\n        }\n\n        // Set up gui\n        //if (Config.isDev) {\n        //this.gui = new DatGUI(this)\n        //}\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            var geometry = new THREE.PlaneBufferGeometry(\n                Config.arena.size,\n                Config.arena.size\n            );\n            var material = new THREE.MeshPhongMaterial({\n                color: 0x999999,\n                depthWrite: false\n            });\n            var ground = new THREE.Mesh(geometry, material);\n            ground.position.set(0, 0, 0);\n            //ground.rotation.x = - Math.PI / 2;\n            ground.receiveShadow = true;\n            this.scene.add(ground);\n\n            var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n            grid.rotation.x = -Math.PI / 2;\n            grid.position.set(0, 0, 0);\n            grid.material.opacity = 0.35;\n            grid.material.transparent = true;\n            this.scene.add(grid);\n\n            //---------------------------------------\n            //this.robot.create(0,80,80);\n            //this.robot.create(2,80,60);\n            //this.robot.move(2, -50, 50, ()=>{\n            //   this.robot.move(2, 0, 0);\n            //});\n\n            //this.robot.get_coordinates(2);\n\n            //---------------------------------------\n            //this.mqtt.publish('v1/localization/info', 'hello !');\n\n            // -------------------------------------\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            //scene.add( new THREE.AxesHelper( 20 ) );\n\n            // Controls panel\n            //this.gui.load(this, this.model.obj);\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                alert('Loaded');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    this.camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n                    //this.gui.load(this, this.model.obj);\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n    }\n\n    render() {\n        // Render rStats if Dev\n        if (Config.isDev && Config.isShowingStats) {\n            Stats.start();\n        }\n\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, this.camera.threeCamera);\n\n        // rStats has finished determining render call now\n        if (Config.isDev && Config.isShowingStats) {\n            Stats.end();\n        }\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}